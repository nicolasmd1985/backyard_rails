name: Deploy to AWS EC2

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/backyardrails:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backyardrails:latest
      

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AWS_SSH_KEY }}
      
      - name: Create .env file
        run: |
          echo "RDS_HOST=${{ secrets.RDS_HOST }}" >> .env.production
          echo "RDS_USERNAME=${{ secrets.RDS_USERNAME }}" >> .env.production
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> .env.production
          echo "RDS_PORT=${{ secrets.RDS_PORT }}" >> .env.production
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env.production
          echo "access_key_id=${{ secrets.access_key_id }}" >> .env.production
          echo "secret_access_key=${{ secrets.secret_access_key }}" >> .env.production
          echo "bucket=${{ secrets.bucket }}" >> .env.production
          echo "region=${{ secrets.region }}" >> .env.production
          echo "TREFLE_API_KEY=${{ secrets.TREFLE_API_KEY }}" >> .env.production
          echo "SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}" >> .env.production

          scp -o StrictHostKeyChecking=no .env.production ubuntu@${{ secrets.AWS_EC2_HOST }}:/home/ubuntu/deploy
    
      - name: Ensure deploy directory exists on EC2
        run: ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_EC2_HOST }} 'mkdir -p /home/ubuntu/deploy && chmod 755 /home/ubuntu/deploy'
      
      - name: Copy deploy script to EC2
        run: scp -o StrictHostKeyChecking=no deploy_script.sh ubuntu@${{ secrets.AWS_EC2_HOST }}:/home/ubuntu/deploy

      - name: Copy docker-compose.yml to EC2
        run: scp -o StrictHostKeyChecking=no docker-compose.yml ubuntu@${{ secrets.AWS_EC2_HOST }}:/home/ubuntu/deploy

      - name: Deploy with Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_EC2_HOST }} 'cd /home/ubuntu/deploy && bash deploy_script.sh'
